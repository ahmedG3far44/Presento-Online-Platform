generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = "mysql://root:@Ranaa125@localhost:3306/portfolio?schema=public"
}

model Users {
  id              String        @id @unique
  name            String
  email           String        @unique
  picture         String?
  role            String        @default("user")
  ExperiencesList Experiences[]
  ProjectsList    Projects[]
  SkillsList      Skills[]
  ContactsList    Contacts[]
  Bio             Bio[]
  Layouts         Layouts[]
  createdAt       DateTime      @default(now())
  updatedAt       DateTime      @updatedAt
}

model Bio {
  id        String  @id @default(uuid())
  heroImage String? @default("")
  bio       String? @default("your summary...")
  jobTitle  String? @default("your currrent job title.... ")
  bioName   String? @default("your name ")
  userId    Users   @relation(fields: [usersId], references: [id])
  usersId   String
}

model Experiences {
  id        String   @id @default(uuid())
  cName     String
  cLogo     String?
  position  String?
  start     String
  end       String
  role      String
  location  String
  userId    Users    @relation(fields: [usersId], references: [id])
  usersId   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

//=========================================
model Projects {
  id          String       @id @default(uuid())
  title       String
  description String?
  thumbnail   String?
  tags        Tags[]
  ImagesList  ImagesList[]
  likes       Int          @default(0)
  views       Float        @default(0.0)
  userId      Users        @relation(fields: [usersId], references: [id])
  usersId     String
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
}

model Tags {
  id         String    @id @default(uuid())
  tagName    String
  Projects   Projects? @relation(fields: [projectsId], references: [id])
  projectsId String?
}

model ImagesList {
  id         String   @id @default(uuid())
  url        String
  projectId  Projects @relation(fields: [projectsId], references: [id])
  projectsId String
}

//=========================================

model Skills {
  id        String   @id @default(uuid())
  skillName String
  skillLogo String?
  userId    Users    @relation(fields: [usersId], references: [id])
  usersId   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Contacts {
  id       String  @id @default(uuid())
  linkedin String?
  github   String?
  youtube  String?
  twitter  String?
  userId   Users   @relation(fields: [usersId], references: [id])
  usersId  String
}

model Layouts {
  id             String @id @default(uuid())
  heroLayout     String @default("1")
  expLayout      String @default("1")
  skillsLayout   String @default("1")
  projectsLayout String @default("1")
  userId         Users  @relation(fields: [usersId], references: [id])
  usersId        String
}
